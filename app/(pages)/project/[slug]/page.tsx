import { getProjectsSlugs } from '@/app/lib/supabase/queries/woCache/projects';
import {
  getProjectBySlug,
  getProjectWithTechnologiesBySlug,
} from '@/app/lib/supabase/queries/server/projects';
import { notFound } from 'next/navigation';
import { addProtocolToUrl } from '@/app/lib/heplers';
import SectThumbnail from '@/app/components/sections/project/thumbnail';
import SectDetailDescription from '@/app/components/sections/project/detail-description';
import SectShortDescription from '@/app/components/sections/project/short-description';
import GithubButton from '@/app/components/sections/project/github-button';
import SectTechnologies from '@/app/components/sections/project/technologies';
import { Metadata } from 'next';
import { getMainSeo } from '@/app/lib/supabase/queries/server/main-info';

export const generateStaticParams = async () =>
  await getProjectsSlugs();

export const revalidate = 3600;

interface ProjectProps {
  params: { slug: string };
}

export async function generateMetadata({
  params,
}: ProjectProps): Promise<Metadata> {
  const { slug } = params;
  const { error: projectError, data: project } =
    await getProjectBySlug(slug);
  const { error: seoError, data: mainSeo } = await getMainSeo();

  if (projectError || seoError) {
    return {
      title: 'Test Steel Lady',
      description: 'Generated by create next app',
    };
  }

  return {
    title: mainSeo.site_name + ' | ' + project.name,
    description: project.description,
    openGraph: {
      images: [project.thumbnail_greeting],
    },
  };
}

export default async function Project({ params }: ProjectProps) {
  const { slug } = params;
  const { data, error } = await getProjectWithTechnologiesBySlug(
    slug
  );
  if (error) notFound();

  const { github_link, technologies } = data;
  const formattedGithubLink = addProtocolToUrl(github_link);

  return (
    <main className="container py-5 grid grid-cols-12 grid-flow-dense gap-4">
      <SectThumbnail project={data} />
      <SectDetailDescription project={data} />
      <SectShortDescription project={data} />
      <GithubButton link={formattedGithubLink} />
      <SectTechnologies technologies={technologies} />
    </main>
  );
}
